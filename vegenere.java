/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ADMIN
 */
public class Vegenere extends javax.swing.JFrame {

    /**
     * Creates new form Vegenere
     */
    public Vegenere() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel1.setText("key");

        jLabel2.setText("key generation");

        jButton1.setText("Encryp");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("key");

        jLabel4.setText("key generation");

        jButton2.setText("Decryp");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                .addComponent(jTextField2)
                                .addComponent(jTextField1)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton2))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(14, 14, 14)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                                             
    // Lấy văn bản từ vùng nhập văn bản 1 (văn bản gốc)
    String plaintext = jTextArea1.getText();
    
    // Lấy khóa từ ô nhập khóa
    String key = jTextField1.getText();
    
    // Gọi phương thức mã hóa với văn bản và khóa
    String encryptedText = vigenereEncrypt(plaintext, key);
    
    // Đặt văn bản đã mã hóa vào vùng nhập văn bản 2 (kết quả mã hóa)
    jTextArea2.setText(encryptedText);
    
    // Hiển thị chuỗi khóa lặp lại tương ứng với độ dài của văn bản gốc
    String repeatedKey = generateKey(plaintext, key); // Sửa ở đây: truyền tham số đúng
    jTextField2.setText(repeatedKey);



    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
              // Lấy văn bản từ vùng nhập văn bản 1 (văn bản gốc)
    String plaintext = jTextArea1.getText();
    
    // Lấy khóa từ ô nhập khóa
    String key = jTextField3.getText();
    
    // Gọi phương thức mã hóa với văn bản và khóa
    String encryptedText = vigenereDecrypt(plaintext, key);
    
    // Đặt văn bản đã mã hóa vào vùng nhập văn bản 2 (kết quả mã hóa)
    jTextArea2.setText(encryptedText);
    
    // Hiển thị chuỗi khóa lặp lại tương ứng với độ dài của văn bản gốc
    String repeatedKey = generateKey(plaintext, key);
    
    // Đặt chuỗi khóa lặp lại vào jTextArea2
    jTextField4.setText(repeatedKey);
    }                                        

    
    
    
// Hàm mã hóa Vigenère
private String vigenereEncrypt(String text, String key) {
    StringBuilder encryptedText = new StringBuilder();
    text = text.toUpperCase(); // Chuyển văn bản thành chữ hoa
    key = generateKey(text, key.toUpperCase()); // Tạo khóa lặp lại

    int j = 0; // Đếm số ký tự chữ cái trong văn bản để xác định vị trí trong khóa
    for (int i = 0; i < text.length(); i++) {
        char letter = text.charAt(i);
        if (Character.isLetter(letter)) { // Chỉ xử lý ký tự chữ cái
            int originalPos = letter - 'A'; // Vị trí của ký tự trong bảng chữ cái
            int keyPos = key.charAt(j) - 'A'; // Vị trí của ký tự trong khóa
            char encryptedChar = (char) ((originalPos + keyPos) % 26 + 'A'); // Mã hóa ký tự
            encryptedText.append(encryptedChar); // Thêm ký tự đã mã hóa vào chuỗi kết quả
            j++; // Tăng j chỉ khi gặp ký tự chữ cái
        }
    }
    return encryptedText.toString(); // Trả về văn bản mã hóa
}


// Hàm giải mã Vigenère
private String vigenereDecrypt(String text, String key) {
    StringBuilder decryptedText = new StringBuilder();
    text = text.toUpperCase(); // Chuyển văn bản thành chữ hoa
    key = generateKey(text, key.toUpperCase()); // Tạo khóa lặp lại

    int j = 0; // Đếm số ký tự chữ cái trong văn bản để xác định vị trí trong khóa
    for (int i = 0; i < text.length(); i++) {
        char letter = text.charAt(i);
        if (Character.isLetter(letter)) { // Chỉ xử lý ký tự chữ cái
            // Tính chỉ số giải mã
            int originalPos = letter - 'A';
            int keyPos = key.charAt(j) - 'A';
            char decryptedChar = (char) ((originalPos - keyPos + 26) % 26 + 'A'); // Thêm 26 để đảm bảo không âm
            decryptedText.append(decryptedChar);
            j++; // Tăng j chỉ khi gặp ký tự chữ cái
        }
    }

    return decryptedText.toString();
}
// hàm lặp
private String generateKey(String text, String key) {
    StringBuilder generatedKey = new StringBuilder();
    int textLength = text.length();
    int keyLength = key.length();

    for (int i = 0, j = 0; i < textLength; i++) {
        if (Character.isLetter(text.charAt(i))) { // Chỉ thêm ký tự từ khóa nếu ký tự trong văn bản là chữ cái
            generatedKey.append(key.charAt(j % keyLength));
            j++; // Chỉ tăng j khi gặp ký tự chữ cái
        }
    }
    return generatedKey.toString();
}




/*private String repeatKeyToMatchLength(String key, String text) {
    StringBuilder repeatedKey = new StringBuilder();
    int textLength = 0;
    
    // Đếm số ký tự chữ cái trong chuỗi văn bản
    for (char c : text.toCharArray()) {
        if (Character.isLetter(c)) {
            textLength++;
        }
    }
    
    // Lặp qua từng ký tự của khóa cho đến khi đủ độ dài tính toán từ số chữ cái
    for (int i = 0; i < textLength; i++) {
        repeatedKey.append(key.charAt(i % key.length()));
    }
    
    return repeatedKey.toString();
}
*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vegenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vegenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vegenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vegenere.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vegenere().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration                   
}
